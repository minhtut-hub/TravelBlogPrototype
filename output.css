/*! tailwindcss v4.1.5 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-indigo-500: oklch(58.5% 0.233 277.117);
    --color-indigo-600: oklch(51.1% 0.262 276.966);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --font-weight-extralight: 200;
    --font-weight-light: 300;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --aspect-video: 16 / 9;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .z-50 {
    z-index: 50;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .my-10 {
    margin-block: calc(var(--spacing) * 10);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-5 {
    margin-bottom: calc(var(--spacing) * 5);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .ml-auto {
    margin-left: auto;
  }
  .\!hidden {
    display: none !important;
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .inline-block {
    display: inline-block;
  }
  .aspect-video {
    aspect-ratio: var(--aspect-video);
  }
  .h-full {
    height: 100%;
  }
  .w-full {
    width: 100%;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-8 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 8px;
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-b-indigo-600 {
    border-bottom-color: var(--color-indigo-600);
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-gray-300 {
    background-color: var(--color-gray-300);
  }
  .bg-indigo-600 {
    background-color: var(--color-indigo-600);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .object-cover {
    object-fit: cover;
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-7 {
    padding: calc(var(--spacing) * 7);
  }
  .\!px-0 {
    padding-inline: calc(var(--spacing) * 0) !important;
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-9 {
    padding-inline: calc(var(--spacing) * 9);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }
  .text-center {
    text-align: center;
  }
  .\!text-lg {
    font-size: var(--text-lg) !important;
    line-height: var(--tw-leading, var(--text-lg--line-height)) !important;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .leading-9 {
    --tw-leading: calc(var(--spacing) * 9);
    line-height: calc(var(--spacing) * 9);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-extrabold {
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
  }
  .font-extralight {
    --tw-font-weight: var(--font-weight-extralight);
    font-weight: var(--font-weight-extralight);
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-indigo-600 {
    color: var(--color-indigo-600);
  }
  .text-white {
    color: var(--color-white);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .hover\:bg-indigo-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-600);
      }
    }
  }
  .hover\:bg-white {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-white);
      }
    }
  }
  .hover\:text-indigo-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-600);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .sm\:col-span-2 {
    @media (width >= 40rem) {
      grid-column: span 2 / span 2;
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:col-span-3 {
    @media (width >= 48rem) {
      grid-column: span 3 / span 3;
    }
  }
  .md\:w-2\/5 {
    @media (width >= 48rem) {
      width: calc(2/5 * 100%);
    }
  }
  .md\:w-3\/5 {
    @media (width >= 48rem) {
      width: calc(3/5 * 100%);
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .lg\:col-span-2 {
    @media (width >= 64rem) {
      grid-column: span 2 / span 2;
    }
  }
  .lg\:row-span-2 {
    @media (width >= 64rem) {
      grid-row: span 2 / span 2;
    }
  }
  .lg\:\!block {
    @media (width >= 64rem) {
      display: block !important;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:w-4\/5 {
    @media (width >= 64rem) {
      width: calc(4/5 * 100%);
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .lg\:p-10 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 10);
    }
  }
  .lg\:text-lg {
    @media (width >= 64rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
}
html {
  scroll-behavior: smooth;
}
nav {
  position: fixed;
  top: calc(var(--spacing) * 0);
  left: calc(var(--spacing) * 0);
  display: flex;
  height: 100vh;
  width: calc(1/5 * 100%);
  flex-direction: column;
  justify-content: space-between;
  background-color: color-mix(in srgb, #000 85%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-black) 85%, transparent);
  }
}
.logo {
  background-color: var(--color-indigo-500);
  padding: calc(var(--spacing) * 3);
  text-align: center;
}
.logo a {
  display: block;
  border-style: var(--tw-border-style);
  border-width: 1px;
  background-color: var(--color-indigo-500);
  padding: calc(var(--spacing) * 12);
  font-size: var(--text-2xl);
  line-height: var(--tw-leading, var(--text-2xl--line-height));
  --tw-font-weight: var(--font-weight-extrabold);
  font-weight: var(--font-weight-extrabold);
  color: var(--color-white);
}
.sidebar-menu {
  padding: calc(var(--spacing) * 5);
}
.sidebar-menu a {
  display: block;
  padding: calc(var(--spacing) * 2);
  font-size: var(--text-lg);
  line-height: var(--tw-leading, var(--text-lg--line-height));
  color: var(--color-white);
  text-transform: capitalize;
}
.social-menu {
  padding: calc(var(--spacing) * 5);
  text-align: center;
}
.social-menu li {
  display: inline-block;
}
.social-menu a {
  display: block;
  padding: calc(var(--spacing) * 2);
  font-size: var(--text-lg);
  line-height: var(--tw-leading, var(--text-lg--line-height));
  color: var(--color-white);
}
.sidebar-menu li.active ::before {
  position: relative;
  top: -5px;
  margin-right: 10px;
  display: inline-block;
  height: 1px;
  width: 30px;
  background-color: var(--color-white);
  --tw-content: '';
  content: var(--tw-content);
}
.sidebar-menu a {
  display: inline-block;
  padding: calc(var(--spacing) * 2);
  font-size: var(--text-lg);
  line-height: var(--tw-leading, var(--text-lg--line-height));
  color: var(--color-white);
  text-transform: capitalize;
  &::before {
    content: var(--tw-content);
    margin-right: calc(var(--spacing) * 3);
  }
  &::before {
    content: var(--tw-content);
    display: inline-block;
  }
  &::before {
    content: var(--tw-content);
    height: calc(var(--spacing) * 2);
  }
  &::before {
    content: var(--tw-content);
    width: calc(var(--spacing) * 2);
  }
  &::before {
    content: var(--tw-content);
    border-radius: calc(infinity * 1px);
  }
  &::before {
    content: var(--tw-content);
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  &::before {
    content: var(--tw-content);
    --tw-content: '';
    content: var(--tw-content);
  }
  &:hover {
    @media (hover: hover) {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-white);
      }
    }
  }
}
header {
  position: fixed;
  top: calc(var(--spacing) * 0);
  right: calc(var(--spacing) * 0);
  left: calc(var(--spacing) * 0);
  z-index: 50;
}
.header-menu {
  background-color: color-mix(in srgb, #000 80%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-black) 80%, transparent);
  }
  padding-block: calc(var(--spacing) * 3);
  transition-property: all;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 500ms;
  transition-duration: 500ms;
  clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);
}
.header-menu.active {
  clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
}
.header-menu a {
  display: block;
  padding: calc(var(--spacing) * 3);
  color: var(--color-white);
  text-transform: capitalize;
  &:hover {
    @media (hover: hover) {
      color: var(--color-gray-500);
    }
  }
}
#home {
  padding: calc(var(--spacing) * 0);
}
#home .swiper-button-next, #home .swiper-button-prev {
  top: calc(var(--spacing) * 20) !important;
  right: calc(var(--spacing) * 50) !important;
  left: auto !important;
  z-index: 50;
  height: calc(var(--spacing) * 13) !important;
  width: calc(var(--spacing) * 12) !important;
  background-color: color-mix(in srgb, #000 80%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-black) 80%, transparent);
  }
  color: var(--color-white) !important;
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-indigo-600);
    }
  }
  &:hover {
    @media (hover: hover) {
      color: var(--color-white) !important;
    }
  }
}
#home .swiper-button-next {
  top: calc(var(--spacing) * 15) !important;
  right: calc(var(--spacing) * 20) !important;
}
#home .swiper-button-prev {
  top: calc(var(--spacing) * 15) !important;
  right: calc(var(--spacing) * 35) !important;
}
#home .swiper {
  height: 100vh;
}
#home .swiper-wrapper .content {
  position: absolute;
  top: calc(1/2 * 100%);
  right: calc(var(--spacing) * 20);
  z-index: 50;
  width: calc(1/3 * 100%);
  --tw-translate-y: calc(calc(1/2 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
  text-align: right;
  color: var(--color-white);
}
#home .swiper-slide img {
  height: 100%;
  width: 100%;
  object-fit: cover;
}
.title {
  display: flex;
  flex-wrap: wrap;
  row-gap: calc(var(--spacing) * 5);
  @media (width >= 64rem) {
    width: calc(2/3 * 100%);
  }
  @media (width >= 64rem) {
    gap: calc(var(--spacing) * 0);
  }
}
.title h2 {
  font-size: var(--text-3xl);
  line-height: var(--tw-leading, var(--text-3xl--line-height));
  text-transform: capitalize;
  @media (width >= 48rem) {
    width: calc(1/3 * 100%);
  }
}
.title h2 span {
  display: block;
  font-size: var(--text-3xl);
  line-height: var(--tw-leading, var(--text-3xl--line-height));
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
  color: var(--color-indigo-600);
}
.title p {
  @media (width >= 48rem) {
    width: calc(2/3 * 100%);
  }
}
#featured img {
  height: 25rem;
  width: 100%;
  object-fit: cover;
}
#featured h2 {
  margin-block: calc(var(--spacing) * 3);
  font-size: var(--text-2xl);
  line-height: var(--tw-leading, var(--text-2xl--line-height));
}
#featured p {
  margin-block: calc(var(--spacing) * 2);
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  --tw-leading: calc(var(--spacing) * 6);
  line-height: calc(var(--spacing) * 6);
  color: var(--color-gray-500);
}
#featured {
  position: relative;
}
#featured .swiper-button-next, #featured .swiper-button-prev {
  top: calc(var(--spacing) * 20) !important;
  right: calc(var(--spacing) * 50) !important;
  left: auto !important;
  z-index: 50;
  height: calc(var(--spacing) * 13) !important;
  width: calc(var(--spacing) * 12) !important;
  background-color: var(--color-gray-500);
  color: var(--color-black) !important;
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-indigo-600);
    }
  }
  &:hover {
    @media (hover: hover) {
      color: var(--color-white) !important;
    }
  }
}
#featured .swiper-button-next {
  top: calc(var(--spacing) * 15) !important;
  right: calc(var(--spacing) * 15) !important;
}
#featured .swiper-button-prev {
  top: calc(var(--spacing) * 15) !important;
  right: calc(var(--spacing) * 30) !important;
}
#featured .swiper-pagination {
  bottom: calc(var(--spacing) * 0) !important;
}
#work .item {
  --tw-duration: 700ms;
  transition-duration: 700ms;
  &::after {
    content: var(--tw-content);
    position: absolute;
  }
  &::after {
    content: var(--tw-content);
    top: calc(var(--spacing) * 0);
  }
  &::after {
    content: var(--tw-content);
    left: calc(var(--spacing) * 0);
  }
  &::after {
    content: var(--tw-content);
    display: block;
  }
  &::after {
    content: var(--tw-content);
    width: 100%;
  }
  &::after {
    content: var(--tw-content);
    background-color: color-mix(in srgb, #fff 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
  }
  &::after {
    content: var(--tw-content);
    opacity: 100%;
  }
  &::after {
    content: var(--tw-content);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  &::after {
    content: var(--tw-content);
    --tw-content: '';
    content: var(--tw-content);
  }
}
#contact input, #contact textarea {
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: var(--color-gray-200);
  background-color: var(--color-gray-100);
  padding: calc(var(--spacing) * 3);
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  outline-style: var(--tw-outline-style);
  outline-width: 0px;
}
#contact button {
  background-color: var(--color-indigo-600);
  padding: calc(var(--spacing) * 3);
  text-align: center;
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
  color: var(--color-white);
  transition-property: all;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  --tw-duration: 500ms;
  transition-duration: 500ms;
  &:hover {
    @media (hover: hover) {
      background-color: var(--color-gray-100);
    }
  }
  &:hover {
    @media (hover: hover) {
      color: var(--color-indigo-600);
    }
  }
}
#entries img {
  height: calc(var(--spacing) * 60);
  width: calc(1/3 * 100%);
  object-fit: cover;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  inherits: false;
  initial-value: "";
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-content: "";
      --tw-duration: initial;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-outline-style: solid;
    }
  }
}
